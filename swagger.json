{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Reach API",
    "description": "connect ngos with teachers.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/api/auth/google": {
      "get": {
        "tags": ["Google authentication"],
        "summary": "redirect the user to google OAuth consent page",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "tags": ["Google authentication"],
        "summary": "sets an authentication cookie that holds the user JWT",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": ["Google authentication"],
        "summary": "responds with a user object as specified in the user schema",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Google authentication"],
        "summary": "clears the authentication cookie and log the user out",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/auth/signup/{type}": {
      "post": {
        "tags": ["Users"],
        "summary": "Signup a new user",
        "description": "Signup a new user",
        "operationId": "signup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type of user",
            "required": true,
            "type": "string",
            "enum": ["volunteer", "ngo"]
          },
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password", "type", "username"],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "email of user",
                  "example": "anymail@hotmail.com",
                  "format": "email"
                },
                "password": {
                  "type": "string",
                  "description": "password of user",
                  "example": "Aa123456",
                  "format": "password"
                },
                "username": {
                  "type": "string",
                  "description": "username of user",
                  "example": "anyusername",
                  "format": "username"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "User created successfully"
                },
                "user": {
                  "type": "object",
                  "description": "user object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id of user",
                      "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                    },
                    "type": {
                      "type": "string",
                      "description": "type of user",
                      "example": "volunteer"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of user",
                      "example": "anymail@hotmail.com",
                      "format": "email"
                    },
                    "username": {
                      "type": "string",
                      "description": "username of user",
                      "example": "anyusername",
                      "format": "username"
                    },
                    "password": {
                      "type": "string",
                      "description": "password of user",
                      "example": "$2a$10$2M5ORDSG.lXG10tb9v1qduh9gHQoPW3dM5fmuIZefgHFPPVST638m",
                      "format": "password"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "created at of user",
                      "example": "2020-01-01T00:00:00.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "updated at of user",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  }
                },
                "200": {
                  "description": "successful operation",
                  "example": "ok"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "User already exists"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login a user",
        "description": "Login a user",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "email of user",
                  "example": "anymail@hotmail.com",
                  "format": "email"
                },
                "password": {
                  "type": "string",
                  "description": "password of user",
                  "example": "Aa123456",
                  "format": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "User logged in successfully"
                },
                "user": {
                  "type": "object",
                  "description": "user object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id of user",
                      "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of user",
                      "example": "anymail@hotmail.com",
                      "format": "email"
                    },
                    "type": {
                      "type": "string",
                      "description": "type of user",
                      "example": "ngo"
                    },
                    "username": {
                      "type": "string",
                      "description": "username of user",
                      "example": "anyusername",
                      "format": "username"
                    },
                    "password": {
                      "type": "string",
                      "description": "password of user",
                      "example": "$2a$10$2M5ORDSG.lXG10tb9v1qduh9gHQoPW3dM5fmuIZefgHFPPVST638m",
                      "format": "password"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "created at of user",
                      "example": "2020-01-01T00:00:00.000Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "updated at of user",
                      "example": "2020-01-01T00:00:00.000Z",
                      "format": "date-time",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "incorrect credentials"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/profile/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get profile of user",
        "description": "Get profile of user",
        "operationId": "getProfile",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "fetched volunteer profile successfully"
                },
                "user": {
                  "type": "object",
                  "description": "user object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id of user",
                      "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of user",
                      "example": "volunteermail@hotmail.com"
                    },
                    "username": {
                      "type": "string",
                      "description": "username of user",
                      "example": "johny88",
                      "format": "username"
                    },
                    "type": {
                      "type": "string",
                      "description": "type of user",
                      "example": "volunteer"
                    },
                    "appliedEvents": {
                      "type": "array",
                      "description": "applied events of user",
                      "default": []
                    },
                    "areaOfExp": {
                      "type": "array",
                      "description": "area of exp of user",
                      "default": []
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "created at of user",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "fetched ngo profile successfully",
                  "format": "message"
                },
                "user": {
                  "type": "object",
                  "description": "user object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id of user",
                      "example": "5e9f8f8f8f8f8f8f8f8f8f8"
                    },
                    "email": {
                      "type": "string",
                      "description": "email of user",
                      "example": "ngomail@hotmail.com",
                      "format": "email"
                    },
                    "username": {
                      "type": "string",
                      "description": "username of user",
                      "example": "redcross2000",
                      "format": "username"
                    },
                    "type": {
                      "type": "string",
                      "description": "type of user",
                      "example": "ngo"
                    },
                    "name": {
                      "type": "string",
                      "description": "name of user",
                      "example": "Red Cross",
                      "format": "name"
                    },
                    "publishedEvents": {
                      "type": "array",
                      "description": "published events of user",
                      "default": []
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "created at of user",
                      "example": "2020-01-01T00:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "unauthorized"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/profile": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update profile of user",
        "description": "Update profile of user",
        "operationId": "updateProfile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "email of user",
                  "example": "anymail@hotmail.com",
                  "format": "email"
                },
                "username": {
                  "type": "string",
                  "description": "username of user",
                  "example": "anyusername",
                  "format": "username"
                },
                "firstName": {
                  "type": "string",
                  "description": "first name of user",
                  "example": "anyfirstName",
                  "format": "firstName"
                },
                "lastName": {
                  "type": "string",
                  "description": "last name of user",
                  "example": "anylastName",
                  "format": "lastName"
                },
                "location": {
                  "type": "string",
                  "description": "location of user",
                  "example": "anylocation",
                  "format": "location"
                },
                "phone": {
                  "type": "string",
                  "description": "phone of user",
                  "example": "05446544533",
                  "format": "phone"
                },
                "description": {
                  "type": "string",
                  "description": "description of user",
                  "example": "anydescription",
                  "format": "description"
                },
                "cv": {
                  "type": "string",
                  "description": "cv of user",
                  "example": "cv.pdf",
                  "format": "cv"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "updated profile successfully"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "incorrect credentials"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": ["Events"],
        "summary": "List all events",
        "operationId": "getEvents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/event/{id}": {
      "get": {
        "tags": ["Events"],
        "summary": "Retrieve single event item based on the id",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of event to fetch",
            "required": true,
            "type": "ObjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "404": {
            "description": "No events",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/ngos": {
      "get": {
        "tags": ["Users"],
        "summary": "Lists all Ngos",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "Listed Ngos"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "The are no ngos to be found"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/ngos/:id": {
      "get": {
        "tags": ["Users"],
        "summary": "Finds one NGO by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "user object",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of success",
                  "example": "There is one Ngo that matchs the requested id"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "message of error",
                  "example": "The are no ngo that matchs the requested id"
                },
                "400": {
                  "description": "bad request",
                  "example": "bad request"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{id}/related-events": {
      "get": {
        "tags": ["Events"],
        "summary": "Retrieve all the related events",
        "operationId": "getRelatedEvents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of event to find the related events",
            "required": true,
            "type": "ObjectId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "404": {
            "description": "No events",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["name", "_id", "email", "providerId"],
      "properties": {
        "_id": {
          "type": "integer",
          "uniqueItems": true
        },
        "isPublic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Event": {
      "type": "object",
      "required": ["avatar", "description", "location", "launchDate", "topic"],
      "properties": {
        "_id": {
          "type": "ObjectID",
          "uniqueItems": true
        },
        "avatar": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "launchDate": {
          "type": "date"
        },
        "ngo": {
          "type": "ObjectId"
        },
        "pendingApplicants": {
          "type": "array",
          "items": {
            "type": "ObjectId"
          }
        },
        "approvedApplicants": {
          "type": "array",
          "items": {
            "type": "ObjectId"
          }
        },
        "declinedApplicants": {
          "type": "array",
          "items": {
            "type": "ObjectId"
          }
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "Events": {
      "type": "object",
      "$ref": "#/definitions/Event"
    },
    "NewEvent": {
      "type": "object",
      "required": ["avatar", "description", "location", "launchDate", "topic"],
      "properties": {
        "_id": {
          "type": "ObjectID",
          "uniqueItems": true
        },
        "avatar": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "launchDate": {
          "type": "date"
        },
        "ngo": {
          "type": "ObjectId"
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
